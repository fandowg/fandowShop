@mixin button-variant($color, $hover-color:lighten($color, 20%)) {
  background-color: $color;
  border-color: $color;
  color: color-yiq($color);
  &:hover,
  &.hover {
    color: color-yiq($hover-color);
    background-color: $hover-color;
    border-color: $hover-color;
    // opacity: 0.9;  
  }
  &:focus,
  &.focus {
    // color: color-yiq($hover-color);
    // background-color:$hover-color;
    // border-color: $hover-color;
    box-shadow: 0 0 0 $btn-focus-width rgba(mix(color-yiq($color), $color, 15%), .5);
  }
  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    color: color-yiq($color);
    background-color: $color;
    border-color: $color;

  }
  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {
    color: color-yiq($hover-color);
    background-color: $hover-color;
    border-color: $hover-color;
    &:focus {
      box-shadow: 0 0 0 $btn-focus-width rgba(mix(color-yiq($color), $color, 15%), .5);
    }
  }
}
@mixin button-outline-variant($color) {
  color: $color;
  border-color: $color;
  &:hover,
  &.hover {
    color: color-yiq($color);
    background-color: $color;
    border-color: $color;
  }
  &:focus,
  &.focus {
    box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
  }
  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }
  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {

    color: color-yiq($color);
    background-color: $color;
    border-color: $color;
    &:focus {
      box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
    }

  }
}

.btn {
  display: inline-block;
  font-size: $btn-font-size;
  font-weight: $btn-font-weight;
  color: $body-color;
  text-align: center;
  padding: $btn-padding-y $btn-padding-x;
  border-radius: $btn-border-radius;
  text-decoration: none;
  vertical-align: middle;
  user-select: none;
  background-color: transparent;
  border: $btn-border-width solid transparent;
  @include transition;
  @include max(md) {
    // font-size: $font-size-base !important;
  }
  //客製化樣式
  // @include skewX;

  &:hover,
  &.hover {
    color: $body-color;
    text-decoration: none;
    // opacity: 0.9;
  }
  &:focus,
  &.focus {
    outline: 0;
    // box-shadow: none;
    box-shadow: $btn-focus-box-shadow;
    // text-decoration: none;
  }
  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    // color: $white;
    opacity: $btn-disabled-opacity;
    pointer-events: none;
    box-shadow: none;

  }
  &:not(:disabled):not(.disabled) {
    cursor: pointer;
    &:active,
    &.active {

      &:focus {}
    }
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}

.btn-lg {
  font-size: $btn-font-size-lg;
  padding: $btn-padding-y-lg $btn-padding-x-lg;
  border-radius: $btn-border-radius-lg;
}

.btn-sm {
  font-size: $btn-font-size-sm;
  padding: $btn-padding-y-sm $btn-padding-x-sm;
  border-radius: $btn-border-radius-sm;
}

//
// Alternate buttons
//

@each $color,
$value in $theme-colors {
  .btn-#{$color} {
    @include button-variant($value);
  }
  .btn-outline-#{$color} {
    @include button-outline-variant($value);
  }
}

//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  font-weight: $font-weight-normal;
  color: $link-color;
  text-decoration: $link-decoration;
  @include transition;
  &:hover,
  &.hover {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &:focus,
  &.focus {
    box-shadow: none;
    text-decoration: $link-hover-decoration;
  }
  // &:active,
  // &.active {
  //   color: $link-hover-color;
  //   // color: $link-color;
  // }
  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
    // pointer-events: none;
  }

  // No need for an active state here
}



//客製化


.btn-full {
  width: 100%;
  display: block;
  // border-radius: 0;
}
.btn-outline-info {
  @include border;
  cursor: none;
  pointer-events: none;

  background-color: $gray-100;
  color: $info;
  &:hover,
  &.hover {
    color: $info;
  }
}

.button-none {
  padding: 0;
  border: 0;
  background: none;
}

.btn-wrapper-center {
  text-align: center;
  // padding-top: $spacer-sm;
  margin-bottom: $spacer-bottom;
}
.btn-wrapper-side {
  display: flex;
  justify-content: flex-end;
  margin-bottom: $spacer-bottom;
  @include max(md) {
    justify-content: center;
  }
  &.delete-spacer {
    @include min(md) {
      padding-right: 6%;
    }
  }
  .btn {
    @include max(md) {
      width: 100%;
    }
    +.btn {
      margin-left: $spacer;
    }
  }
}

.close-position {
  position: absolute;
  right: $spacer;
  top: $spacer;
}

.to-top-btn {
  display: none;
  position: fixed;
  right: $spacer;
  bottom: $spacer;
  cursor: pointer;
  @include transition;

  &.show {
    display: block;
  }
}